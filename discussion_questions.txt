Runtime:

    1. The workload is based on how many animals are in the box, because that will determine the number of tasks required in order to find an elephant.

    2. O(1), O(log n), O(n), O(n log n), O(n^2), O(2^n)

Stack and Queues:

    1.1 Stack
    1.2 Queue
    1.3 Stack

    2.a A call center that put people on hold and answers in the order of who
        called first. 
    2.b A task manager that gives you the oldest task first.

    3.a A task manager that gives you the newest task first. 
    3.b Implementing an undo button.

Linked Lists:

    1.a The nodes are the Apple box with an arrow pointing at the Berry box and the
        Berry box has an arrow pointing at the Cherry box. The Cherry Box is pointing at None.
    1.b The data for each box is the text "Apple", "Berry", "Cherry".
    1.c The head is a an attribute of the LList Class which is pointing at the Apple
        box.
    1.d The LList doesn't have a defined tail pointer, but if it were to create an 
        LList attribute of tail, you would point it at the Cherry box.

    2. A single linked list is made up of nodes that point to the next node. A doubly
        linked list is made up of nodes that point to the previous node and the next node.

    3. It's faster to append to a linked list, if we know the tail, because then we 
        won't have to traverse the list each time to find the end. We can just append the item to the tail. 

Trees:

    1. food, Italian, Indian, Mexican, lasagna, pizza, tikka Masala, saag, burritos

    2. food, Italian, lasagna, pizza, thin crust, Chicago-style

    3. A binary search tree is a binary tree, which means that the node can only 
        have up to two children nodes below it. In order to create a binary search tree from a binary tree, the node value on the left has to be lower than the value on the right.

